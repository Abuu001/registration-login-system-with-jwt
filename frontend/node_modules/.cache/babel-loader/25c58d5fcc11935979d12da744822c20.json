{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lugonzo/New Volume/Web projects/node_js_backend/Registration Login With Jwt/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from './components/Login__Registration/Login';\nimport Registration from './components/Login__Registration/Registration';\nimport Dashboard from \"./components/Login__Registration/Dashboard/Dashboard\"; //  import { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css'; //toast.configure();\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const isAuth = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3002/auth/is-verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n      console.log(parseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    isAuth();\n  }, []);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 80\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 126\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Registration, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 83\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 136\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/dashboard\",\n            render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 82\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 131\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MGcuQP1L5Vnl9SoQLOE5uvY4yCU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/lugonzo/New Volume/Web projects/node_js_backend/Registration Login With Jwt/frontend/src/App.js"],"names":["Fragment","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","Login","Registration","Dashboard","App","isAuthenticated","setIsAuthenticated","isAuth","response","fetch","method","headers","token","localStorage","parseRes","json","console","log","error","message","setAuth","boolean","props"],"mappings":"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","sourcesContent":["import { Fragment,useState ,useEffect} from 'react';\nimport './App.css';\nimport  {BrowserRouter as Router , Switch,Route,Redirect} from \"react-router-dom\"\nimport Login from './components/Login__Registration/Login';\nimport Registration from './components/Login__Registration/Registration';\nimport Dashboard from \"./components/Login__Registration/Dashboard/Dashboard\"\n//  import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//toast.configure();\n\nfunction App() {\n\n  const [isAuthenticated,setIsAuthenticated]=useState(false);\n\n  const isAuth=async ()=>{\n    try {\n      const response = await fetch(\"http://localhost:3002/auth/is-verify\",{\n        method :\"GET\",\n        headers : {token : localStorage.token}\n      })\n\n      const parseRes = await response.json()\n      parseRes ===  true  ?   setIsAuthenticated(true) : setIsAuthenticated(false)\n      console.log(parseRes);\n\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(()=>{\n    isAuth()\n  },[])\n\n  const setAuth =(boolean)=>{\n    setIsAuthenticated(boolean)\n  }\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n              <Route exact path=\"/login\" render={props => !isAuthenticated ?  (<Login  {...props} setAuth={setAuth} />)  :  (<Redirect to=\"/dashboard\"/>)  }/>\n              <Route exact path=\"/register\" render={props => !isAuthenticated ?  (<Registration  {...props}  setAuth={setAuth} />)  : (<Redirect to=\"/login\"/>)  }  />\n              <Route exact path=\"/dashboard\" render={props => isAuthenticated ?  <Dashboard  {...props} setAuth={setAuth} />  :  (<Redirect  to=\"/login\" />) }/>\n          </Switch>\n        </div>\n      </Router>\n  \n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}